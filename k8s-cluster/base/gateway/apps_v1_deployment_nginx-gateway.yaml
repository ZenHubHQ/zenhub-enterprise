apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: nginx-gateway
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: nginx-gateway
  name: nginx-gateway
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: nginx-gateway
      app.kubernetes.io/managed-by: kustomize
      app.kubernetes.io/name: nginx-gateway
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: nginx-gateway
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: nginx-gateway
    spec:
      containers:
      - env:
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WEBAPP
          valueFrom:
            configMapKeyRef:
              key: webapp
              name: zhe-gw-vars
        - name: API
          valueFrom:
            configMapKeyRef:
              key: api
              name: zhe-gw-vars
        - name: FILES
          valueFrom:
            configMapKeyRef:
              key: files
              name: zhe-gw-vars
        - name: WEBHOOK
          valueFrom:
            configMapKeyRef:
              key: webhook
              name: zhe-gw-vars
        - name: SOCKET
          valueFrom:
            configMapKeyRef:
              key: socket
              name: zhe-gw-vars
        - name: ACTIONCABLE
          valueFrom:
            configMapKeyRef:
              key: action-cable
              name: zhe-gw-vars
        - name: RAPTORADMIN
          valueFrom:
            configMapKeyRef:
              key: raptoradmin
              name: zhe-gw-vars
        image: nginx
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: http
        name: nginx-gateway
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 400Mi
          requests:
            cpu: 250m
            memory: 200Mi
        volumeMounts:
        - mountPath: /data/zhe-monitor
          name: monitor
        - mountPath: /etc/nginx/nginx.conf
          name: zhe-gw-nginx-conf-volume
          subPath: nginx.conf
        - mountPath: /etc/nginx/templates/default.conf.template
          name: proxy-conf-volume
          subPath: default.conf.template
        - mountPath: /usr/share/nginx/html/maintenance.html
          name: maintenance-page-volume
          subPath: maintenance.html
        - mountPath: /usr/share/nginx/html/ghe-status.html
          name: ghe-status-page-volume
          subPath: ghe-status.html
        - mountPath: /usr/share/nginx/html/license-status.html
          name: license-status-page-volume
          subPath: license-status.html
        - mountPath: /etc/nginx/conf.d/include-ssl.conf
          name: zhe-gw-include-ssl-volume
          subPath: include-ssl.conf
        - mountPath: /etc/nginx/templates/include-upstream-bucket.conf.template
          name: zhe-gw-include-upstream-bucket-volume
          subPath: include-upstream-bucket.conf.template
        - mountPath: /etc/nginx/templates/include-location-images.conf.template
          name: zhe-gw-include-location-images-volume
          subPath: include-location-images.conf.template
        - mountPath: /etc/nginx/templates/include-location-files.conf.template
          name: zhe-gw-include-location-files-volume
          subPath: include-location-files.conf.template
        - mountPath: /etc/nginx/templates/include-location-ff-extension.conf.template
          name: zhe-gw-include-location-ff-extension-volume
          subPath: include-location-ff-extension.conf.template
      - command:
        - ghe-maintenance-monitor.sh
        env:
        - name: GITHUB_SERVER_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: github_server_address
              name: toad
        - name: WAITING_TIME
          value: "30"
        - name: MAINTENANCE_MODE
          value: ""
        - name: LICENSE_MODE
          value: ""
        image: nginx
        imagePullPolicy: IfNotPresent
        name: monitor
        resources:
          limits:
            cpu: 250m
            memory: 200Mi
          requests:
            cpu: 250m
            memory: 200Mi
        volumeMounts:
        - mountPath: /data/zhe-monitor
          name: monitor
        - mountPath: /usr/bin/ghe-maintenance-monitor.sh
          name: zhe-monitor-volume
          subPath: ghe-maintenance-monitor.sh
      volumes:
      - emptyDir: {}
        name: monitor
      - configMap:
          name: zhe-gw-nginx-conf
        name: zhe-gw-nginx-conf-volume
      - configMap:
          name: zhe-gw-conf
        name: proxy-conf-volume
      - configMap:
          name: zhe-maintenance-page
        name: maintenance-page-volume
      - configMap:
          name: zhe-license-status-page
        name: license-status-page-volume
      - configMap:
          name: zhe-ghe-status-page
        name: ghe-status-page-volume
      - configMap:
          defaultMode: 511
          name: zhe-monitor
        name: zhe-monitor-volume
      - configMap:
          name: zhe-gw-include-ssl
        name: zhe-gw-include-ssl-volume
      - configMap:
          name: zhe-gw-include-upstream-bucket
        name: zhe-gw-include-upstream-bucket-volume
      - configMap:
          name: zhe-gw-include-location-images
        name: zhe-gw-include-location-images-volume
      - configMap:
          name: zhe-gw-include-location-files
        name: zhe-gw-include-location-files-volume
      - configMap:
          name: zhe-gw-include-location-ff-extension
        name: zhe-gw-include-location-ff-extension-volume
