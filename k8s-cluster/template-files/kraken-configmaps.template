apiVersion: v1
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        map $http_user_agent $ignore_status_checks {
            default                 0;
            "~*probe*"              1;
            "~*GoogleHC*"           1;
            "~*Statuspal*"          1;
        }

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
kind: ConfigMap
metadata:
  name: kraken-nginx-base
---
apiVersion: v1
data:
  server-block.conf: |-
    server {
      listen 80;
      root /usr/share/nginx/html;
      index index.html;
      #Hides nginx version
      server_tokens off;
      add_header X-Frame-Options "sameorigin";
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header Set-Cookie "Path=/; HttpOnly; Secure";
      #X-Frame-Options header needs to be added in every level
      #where another add_header directive is defined
      #Source: http://nginx.org/en/docs/http/ngx_http_headers_module.html#add_header
      #:######## Quote ####################
      #There could be several add_header directives.
      #These directives are inherited from the previous level if and only if:
      #there are no add_header directives defined on the current level.
      ############ UnQuote ################

      location ~* \.(?:css|js)$ {
        expires 3d;
        access_log off;
        add_header Cache-Control "public";
        add_header X-Frame-Options "sameorigin";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Set-Cookie "Path=/; HttpOnly; Secure";
      }

      location ~* \.(?:jpg|jpeg|gif|png|svg)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
        add_header X-Frame-Options "sameorigin";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Set-Cookie "Path=/; HttpOnly; Secure";
      }

      location / {
        if ($ignore_status_checks) {
          access_log      off;
        }
        real_ip_header X-Forwarded-For;
        add_header Cache-Control no-cache;
        add_header X-Frame-Options "sameorigin";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Set-Cookie "Path=/; HttpOnly; Secure";
        expires 0;
        try_files $uri /index.html =404;
      }
    }
kind: ConfigMap
metadata:
  name: kraken-nginx-server-block
---
apiVersion: v1
data:
  webapp-config.js: |
    window.config = {
      "auth0ClientId": "",
      "auth0Domain": "",
      "auth0Issuer": "",
      "auth0Audience": "",
      "CABLE_URL": "wss://%%subdomain_suffix%%.%%domain_tld%%/cable/",
      "CAMO_HOST": "",
      "CAMO": "",
      "companyDomain": "Zenhub",
      "dashboardURL": "https://%%subdomain_suffix%%.%%domain_tld%%/dashboard",
      "ENV": "enterprise",
      "env": "enterprise",
      "GITHUB_SERVER_ADDRESS": "%%github_hostname%%",
      "githubGraphQLApiUrl": "%%github_hostname%%/api/graphql",
      "githubRestApiUrl": "%%github_hostname%%/api/v3",
      "githubURL": "%%github_hostname%%",
      "hostURL": "https://%%subdomain_suffix%%.%%domain_tld%%/api",
      "isDev": false,
      "isEnterprise": true,
      "isLicenseGovernanceEnabled": false,
      "isNotionIntegrationEnabled": false,
      "isTrackerEnabled": false,
      "isUploadFileToLocal": false,
      "loginURL": "https://%%subdomain_suffix%%.%%domain_tld%%/api/auth/github",
      "marketplaceURL": "",
      "maxFileUpload": 15728640,
      "maxFileUploadString": "15 MB",
      "mixpanel": "",
      "NO_CHECK_UPDATE_FOR_OPENED_ISSUE_VIEWER": true,
      "repoFetchPageLimit": 12,
      "salesmachine": "",
      "sentry": "",
      "stripe": "",
      "verboseLogs": false,
      "webappPrefix": "",
      "webappURL": "https://%%subdomain_suffix%%.%%domain_tld%%",
      "ZENHUB_SERVER_ADDRESS": "https://%%subdomain_suffix%%.%%domain_tld%%/api",
      "ZENHUB_RAPTOR_ADDRESS": "https://%%subdomain_suffix%%.%%domain_tld%%/raptorApi",
      "ZENHUB_WEBAPP_ADDRESS": "https://%%subdomain_suffix%%.%%domain_tld%%",
      "ZENHUB_DEVSITE_ADDRESS": "https://%%devsite_zhe_hostname%%",
      "ZENHUB_CHROME_EXT_WEBSTORE_URL": "%%chrome_extension_webstore_url%%",
      "ZENHUB_FIREFOX_EXT_JSON_URL": "https://%%subdomain_suffix%%.%%domain_tld%%/zhe-public/ff-ext-signed/latest.json",
      "ZENHUB_FIREFOX_EXT_XPI_ROOT_URL": "https://%%subdomain_suffix%%.%%domain_tld%%/zhe-public/ff-ext-signed",
      "authOptions": {
        "GitHub": true,
        "Google": false,
        "AzureAD": false,
        "LDAP": false,
        "SAML": false,
        "Zenhub": false
      }
    }
kind: ConfigMap
metadata:
  name: kraken
---
